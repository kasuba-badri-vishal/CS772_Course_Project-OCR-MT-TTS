2 where Mip is the total number of interpolation points in the gesture input vector and xi, is the x-component of the ith interpolation point in the first of the two input vectors being compared. This is very similar to the proportional shape matching channel used in the SHARK writing system and in the gesture clarity metric used by Smith et al. Although this method can correctly identify when two gesture inputs match exactly, it could also return a large distance between two input vectors that are qualitatively very similar. For example, a user may start near the bottom of the key for the first letter of the word and end up shifting the entire gesture input pattern below the centers of the subsequent keys. This input pattern could pass over all of the correct keys but still result in a large Euclidean distance when The shortcomings of this approach made it clear that we were not utilizing all of the useful information contained in the input vectors. Ifaj poor distance measure were to cause misidentifications that would not happen in practice then this could introduce significant biases during the optimization procedure, resulting in a keyboard that is not optimal for real use. Kristensson and Zhai accounted for this in the SHARK writing system by incorporating language and location information in addition to proportional shape matching in their recognition algorithm. Similarly, In order to reduce the impact of these systematic effects, we needed to identify additional features Our first step was to uncouple the x and y coordinates and treat them individually. Given the anisotropic nature of most keyboards, the relative importance of biases between the two spatial dimensions is not clear a p ri. Therefore, we decided t tthe first two features should be the . compared to the perfect vector for the word. that would improve our gesture input recognition. 3.1.2. Feature Set Euclidean distance two input vectors for and y components individually, V2 V2 In order to address the issue with offset input vectors, translational symmetry needed to be taken into account. To do this we decided to look at the time derivatives of the input vectors with respect to their x and y coordinates. Since the input vectors are sets of sequential, discrete points we can easily estimate the derivative at each point. We can then construct a distance measure by taking the Euclidian distance be een the time derivatives of two swipe patterns at each point. The equation for the derivative in the x-dimension is given ly: N2 where x1 and X2 are the x-components of the two input vectors being compared. We assume a constant input velocity for the models considered here SO we've implicitly rescaled the time coordinated such that 1+1 fi = 1 to simplify the equations. 7